ARG distro=ubuntu
ARG tag=latest
ARG repo=https://github.com/alibaba/xquic.git
ARG version=v1.8.0

FROM ${distro}:${tag} as builder
ARG repo
ARG version
ARG TARGETPLATFORM # automatically passed by docker

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y \
    git \
    build-essential \
    wget \
    libssl-dev \
    libevent-dev

# install new cmake
RUN wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0.tar.gz && \
    tar -zvxf cmake-3.20.0.tar.gz && \
    cd cmake-3.20.0 && \
    ./bootstrap && \
    make -j8 && \
    make install

RUN git clone --depth 1 --branch ${version} ${repo} /xquic
WORKDIR /xquic
RUN git clone https://github.com/google/boringssl.git ./third_party/boringssl
RUN mkdir -p /xquic/third_party/boringssl/build
WORKDIR /xquic/third_party/boringssl/build
RUN cmake -DBUILD_SHARED_LIBS=0 -DCMAKE_C_FLAGS="-fPIC" -DCMAKE_CXX_FLAGS="-fPIC" ..
RUN make ssl crypto

ENV SSL_TYPE_STR="boringssl"
ENV SSL_PATH_STR="/xquic/third_party/boringssl"
WORKDIR /xquic
RUN git submodule update --init --recursive
RUN mkdir -p /xquic/build
WORKDIR /xquic/build
RUN cmake -DGCOV=on -DCMAKE_BUILD_TYPE=Debug -DXQC_ENABLE_TESTING=1 -DXQC_SUPPORT_SENDMMSG_BUILD=1 -DXQC_ENABLE_EVENT_LOG=1 -DXQC_ENABLE_BBR2=1 -DXQC_ENABLE_RENO=1 -DSSL_TYPE=${SSL_TYPE_STR} -DSSL_PATH=${SSL_PATH_STR} ..
RUN make -j

FROM ${distro}:${tag}

# copy library
COPY --from=builder /xquic/build/libxquic.so /usr/local/lib/
COPY --from=builder /xquic/build/libxquic-static.a /usr/local/lib/
RUN ldconfig

# copy demo binary
COPY --from=builder /xquic/build/demo/demo_client /usr/bin/
COPY --from=builder /xquic/build/demo/demo_server /usr/bin/
 
# copy test binary
COPY --from=builder /xquic/build/tests/test_client /usr/bin/
COPY --from=builder /xquic/build/tests/test_server /usr/bin/

# copy test scripts
COPY --from=builder /xquic/scripts/case_test.sh /usr/bin/
