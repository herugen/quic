name: docker-publish-xquic

on: workflow_dispatch
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  XQUIC_REPO: https://github.com/alibaba/xquic.git
  XQUIC_VER: v1.8.0

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2.2.0
        with:
          cosign-release: 'v2.2.0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-xquic

      - name: Build and push XQUIC
        id: build-and-push-nf
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.xquic
          platforms: linux/amd64,linux/arm64
          build-args: |
            tag=focal
            repo=${{ env.XQUIC_REPO }}
            version=${{ env.XQUIC_VER }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-xquic:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-xquic:${{ env.XQUIC_VER }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.build-and-push-nf.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-nf.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
